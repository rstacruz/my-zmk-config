#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define NAV    1
#define HEX    2
#define SYM    3
#define FUN    4
#define ADJ    5
#define FVBASE 6
#define FVFLIP 7
#define FVNAVI 8
#define FVNUMP 9
#define FVSYMB 10
#define LOCK   11
#define ULOC   12

#define NTAB LC(PGDN) /* Next tab */
#define PTAB LC(PGUP) /* Previous tab */
#define SFTAB LS(TAB) /* Shift-tab */

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping_term_ms = <150>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
    th: tap_hold {
      compatible = "zmk,behavior-hold-tap";
      label = "TAP_HOLD";
      #binding-cells = <2>;
      tapping_term_ms = <150>;
      flavor = "hold-preferred";
      bindings = <&kp>, <&kp>;
    };
    mcomma: mod_morph_comma {
      compatible = "zmk,behavior-mod-morph";
      label = "MOD_MORPH_COMMA";
      #binding-cells = <0>;
      bindings = <&kp COMMA>, <&kp MINUS>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    mdot: mod_morph_dot {
      compatible = "zmk,behavior-mod-morph";
      label = "MOD_MORPH_DOT";
      #binding-cells = <0>;
      bindings = <&kp DOT>, <&kp SLASH>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };

  combos {
    compatible = "zmk,combos";
    combo_quot {
      timeout-ms = <25>;
      key-positions = <26 27>; // [h ,] => [']
      bindings = <&kp QUOT>;
      layers = <0>;
    };
    combo_minus {
      timeout-ms = <25>;
      key-positions = <27 28>; // [. ,] => [-]
      bindings = <&kp MINUS>;
      layers = <0>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer { // Base (Colemak-DH)
      // ┌─────────────────────┬─────────────────────┐
      // │ q^  w   f   p   b   │ j   l   u   y   ⌫   │
      // │ a   r   s   t   g   │ m   n   e   i   o   │
      // │ z   x   c   d   v   │ k   h   ,_  .?  ↵   │
      // └─────────────────────┴─────────────────────┘
      //         │ ⌘   Sym ⇧   │ ␣   Nav ⌥   │
      //         └─────────────┴─────────────┘ 
      bindings = <
        &hm LCTL Q  &kp W     &kp F     &kp P     &kp B       &kp J     &kp L     &kp U     &kp Y     &kp BSPC
        &kp A       &kp R     &kp S     &kp T     &kp G       &kp M     &kp N     &kp E     &kp I     &kp O
        &kp Z       &kp X     &kp C     &kp D     &kp V       &kp K     &kp H     &mcomma   &mdot     &th LCTL RET
                              &kp LGUI  &mo SYM   &kp LSHFT   &kp SPACE &mo NAV   &kp RALT
      >;
    };

    nav_layer { // Navigation
      // ┌─────────────────────┬─────────────────────┐
      // │ ^   ⌘   ⇤   ⇥   ⌥   │ p↑  hom ▲   end ⌫   │
      // │ 1   2   3   4   5   │ p↓  ◀   ▼   ▶   ↵   │
      // │ 6   7   8   9   0   │         esc .   del │
      // └─────────────────────┴─────────────────────┘
      //         │     Fn      │     Fn      │
      //i        └─────────────┴─────────────┘ 
      bindings = <
        &kp LCTRL &kp LGUI  &kp SFTAB &kp TAB   &kp LALT     &kp PGUP  &kp HOME  &kp UP    &kp END   &lt HEX BSPC
        &kp N1    &kp N2    &kp N3    &kp N4    &kp N5       &kp PGDN  &kp LEFT  &kp DOWN  &kp RIGHT &kp RET
        &kp N6    &kp N7    &kp N8    &kp N9    &kp N0       &kp ESC   &kp PTAB  &kp ESC   &kp DOT   &th LCTL DEL
                            &trans    &mo FUN   &trans       &trans    &mo FUN   &trans
      >;
    };

    hex_layer { // Numeric input (southpaw)
      // ┌─────────────────────┬─────────────────────┐
      // │ a   b ┆ 1   2   3   │ ⌫       ,   .   ▓▓  │
      // │ c   d ┆ 4   5   6   │ #   :               │
      // │ e   f ┆ 7   8   9   │ /   *   -   +       │
      // └─────────────────────┴─────────────────────┘
      //         │ ,   0   .   │ ␣           │
      //         └─────────────┴─────────────┘ 
      bindings = <
        &kp A     &kp B     &kp N1    &kp N2    &kp N3       &kp BSPC  &kp BSPC  &kp COMMA &kp DOT   &none
        &kp C     &kp D     &kp N4    &kp N5    &kp N6       &kp HASH  &kp COLON &none     &none     &none
        &kp E     &kp F     &kp N7    &kp N8    &kp N9       &kp SLASH &kp STAR  &kp MINUS &kp PLUS  &none
                            &kp COMMA &kp N0    &kp DOT      &kp SPC   &kp RET   &none
      >;
    };

    sym_layer { // Symbols
      // ┌─────────────────────┬─────────────────────┐
      // │ '   "   ^   ?   `   │ [   <   =   >   ]   │
      // │ !   @   #   $   %   │ {   (   :   )   }   │
      // │ \   ~   |   &   ;   │ /   *   -   +   _   │
      // └─────────────────────┴─────────────────────┘
      //         │         Adj │     Fn      │
      //         └─────────────┴─────────────┘
      bindings = <
        &kp QUOT  &kp DQT   &kp CARET &kp QMARK &kp GRAVE   &kp LBKT  &kp LT    &kp EQUAL &kp GT    &kp RBKT
        &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT   &kp LBRC  &kp LPAR  &kp COLON &kp RPAR  &kp RBRC
        &kp BSLH  &kp TILDE &kp PIPE  &kp AMPS  &kp SEMI    &kp SLASH &kp STAR  &kp MINUS &kp PLUS  &kp UNDER
                            &trans    &mo FUN   &mo ADJ     &trans    &mo FUN   &trans
      >;
    };

    fn_layer { // Function
      // ┌─────────────────────┬─────────────────────┐
      // │ f11 f12 .   .   .   │ .   .   .   .   b⁺  │
      // │ f1  f2  f3  f4  f5  │ .   .   .   .   b⁻  │
      // │ f6  f7  f8  f9  f6  │ v⁻  v⁺  ply nxt .   │
      // └─────────────────────┴─────────────────────┘
      bindings = <
        &kp F11   &kp F12   &none     &none     &none       &none        &none        &none      &none      &kp C_BRI_UP
        &kp F1    &kp F2    &kp F3    &kp F4    &kp F5      &none        &none        &none      &none      &kp C_BRI_DN
        &kp F6    &kp F7    &kp F8    &kp F9    &kp F10     &kp C_VOL_DN &kp C_VOL_UP &kp C_PLAY &kp C_NEXT &none       
                            &trans    &trans    &trans      &trans       &trans       &trans    
      >;
    };

    adjust_layer { // Adjust
      // ┌─────────────────────┬─────────────────────┐
      // │ loc .   .   .   clr │ p↑  hom ▲   end .   │
      // │ .   .   .   .   .   │ p↓  ◀   ▼   ▶   ent │
      // │ .   .   .   .   .   │ b1  b2  b3  b4  boot│
      // └─────────────────────┴─────────────────────┘
      //         │ ·   Fv  .   │ .   bt  usb │
      //         └─────────────┴─────────────┘
      bindings = <
        &tog LOCK    &none        &none        &none        &bt BT_CLR     &kp PGUP     &kp HOME     &kp UP       &kp END      &none
        &none        &none        &bt BT_SEL 0 &bt BT_SEL 1 &out OUT_USB   &kp PGDN     &kp LEFT     &kp DOWN     &kp RIGHT    &th LCTL RET
        &none        &none        &bt BT_SEL 2 &bt BT_SEL 3 &out OUT_BLE   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bootloader
                                  &trans       &tog FVBASE  &none          &none        &out OUT_BLE &out OUT_USB
      >;
    };

    fvbase_layer { // FrogV base
      // Base:                   Flip:                   Nav:                   
      // ┌─────────────────────┐ ┌─────────────────────┐ ┌─────────────────────┐ 
      // │ N/s c   n   i   g   │ │ q   w   m   j   k   │ │ .   p↑  ▲   p↓  ⌫   │ 
      // │ ●   t   h   e   o   │ │ .   p   l   x   ⌫   │ │ .   ◀   ▼   ▶   ↵   │
      // │ S/f d   r   a   u   │ │ .   b   v   y   z   │ │ .   hom end ⇥   esc │
      // └───────┐ ctl num ␣   │ └───────┐ ctl gui ↑   │ └───────┐ ctl gui ↑   │ 
      //         └─────────────┘         └─────────────┘         └─────────────┘ 
      bindings = <
        &lt FVNAVI S &kp C     &kp N     &kp I      &kp G        &none       &none     &none     &none     &none
        &sl FVFLIP   &kp T     &kp H     &kp E      &kp O        &none       &none     &none     &none     &none
        &lt FVSYMB F &kp D     &kp R     &kp A      &kp U        &none       &none     &none     &none     &none
                               &kp LCTL  &mo FVNUMP &kp SPACE    &tog FVBASE &none     &none
      >;
    };

    fvflip_layer { // FrogV flip
      bindings = <
        &kp Q      &kp W     &kp M     &kp J     &kp K       &trans    &trans    &trans    &trans    &trans
        &trans     &kp P     &kp L     &kp X     &kp BSPC    &trans    &trans    &trans    &trans    &trans
        &kp Q      &kp B     &kp V     &kp Y     &kp Z       &trans    &trans    &trans    &trans    &trans
                             &kp LCTL  &kp LGUI  &kp LSFT    &trans    &trans    &trans
      >;
    };

    fvnavi_layer { // FrogV navigation
      bindings = <
        &trans     &kp PGUP  &kp UP    &kp PGDN   &kp BSPC     &trans    &trans    &trans    &trans    &trans
        &none      &kp LEFT  &kp DOWN  &kp RIGHT  &kp RET      &trans    &trans    &trans    &trans    &trans
        &none      &kp HOME  &kp END   &kp TAB    &kp ESC      &trans    &trans    &trans    &trans    &trans
                             &kp LCTL  &kp LGUI   &kp LSFT     &trans    &trans    &trans
      >;
    };

    fvnump_layer { // FrogV number pad
      // Num:                    Sym:
      // ┌─────────────────────┐ ┌─────────────────────┐
      // │ .   1   2   3       │ │     !   [   ]   \   │
      // │ ↑   4   5   6   gui │ │     '   =   -   /   │
      // │ ext 7   8   9   0   │ │     ;   ,   .   '   │
      // └───────┐ cmd .   ctl │ └───────┐         ↑   │
      //         └─────────────┘         └─────────────┘
      bindings = <
        &none       &kp N1    &kp N2    &kp N3     &none        &trans    &trans    &trans    &trans    &trans
        &kp LSFT    &kp N4    &kp N5    &kp N6     &kp LGUI     &trans    &trans    &trans    &trans    &trans
        &tog FVBASE &kp N7    &kp N8    &kp N9     &kp N0       &trans    &trans    &trans    &trans    &trans
                              &kp LALT  &trans     &kp LCTL     &trans    &trans    &trans
      >;
    };

    fvsymb_layer { // FrogV symbol
      bindings = <
        &none     &kp EXCL  &kp LBKT  &kp RBKT   &kp BSLH     &trans    &trans    &trans    &trans    &trans
        &none     &kp GRAVE &kp EQUAL &kp MINUS  &kp LGUI     &trans    &trans    &trans    &trans    &trans
        &none     &kp SEMI  &kp COMMA &kp DOT    &kp QUOT     &trans    &trans    &trans    &trans    &trans
                            &trans    &trans     &kp LSFT     &trans    &trans    &trans
      >;
    };

    lock_layer { // Lock
      bindings = <
        &mo ULOC  &none     &none     &none     &none        &none     &none     &none     &none     &none
        &none     &none     &none     &none     &none        &none     &none     &none     &none     &none
        &none     &none     &none     &none     &none        &none     &none     &none     &none     &none
                            &none     &none     &mo ULOC     &none     &none     &none
      >;
    };

    unlock_layer { // Unlock
      bindings = <
        &tog LOCK &none     &none     &none     &none        &none     &none     &none     &none     &none
        &none     &none     &none     &none     &none        &none     &none     &none     &none     &none
        &none     &none     &none     &none     &none        &none     &none     &none     &none     &none
                            &none     &none     &tog LOCK    &none     &none     &none
      >;
    };

  };
};

// vim:ft=c
// https://zmk.dev/docs/codes/
