#define NAV    1
#define SYM    2
#define HEX    3
#define FUN    4
#define ADJ    5
#define FVBASE 6
#define FVFLIP 7
#define FVNAVI 8
#define FVNUMP 9
#define FVSYMB 10
#define GAME   11
#define GAMEX  12
#define GAMEY  13
#define LOCK   14
#define ULOC   15

#define NTAB LC(PGDN) /* Next tab */
#define PTAB LC(PGUP) /* Previous tab */
#define SFTAB LS(TAB) /* Shift-tab */

#define BT(n) &bt BT_SEL n
#define BT_BLE &out OUT_BLE
#define BT_USB &out OUT_USB
#define BT_TOG &out OUT_TOG

/* Shorthand */
#define _ &kp
#define __ &none

/* Complex keys */
#define _CTLQ &hm LCTL Q /* Q (tap), ctrl (hold) */
#define _CENT &th LCTL RET /* Enter (tap), ctrl (hold) */
#define _DLLR &lt NAV DLLR /* Dollar (tap), NAV (hold) */

#define COMBO_TIMEOUT 30

behaviors {
  hm: homerow_mods { // Letter mods
    compatible = "zmk,behavior-hold-tap";
    label = "HOMEROW_MODS";
    #binding-cells = <2>;
    tapping_term_ms = <150>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;
  };
  th: tap_hold { // Other mods (enter)
    compatible = "zmk,behavior-hold-tap";
    label = "TAP_HOLD";
    #binding-cells = <2>;
    tapping_term_ms = <150>;
    flavor = "hold-preferred";
    bindings = <&kp>, <&kp>;
  };
  mcomma: mod_morph_comma {
    compatible = "zmk,behavior-mod-morph";
    label = "MOD_MORPH_COMMA";
    #binding-cells = <0>;
    bindings = <&kp COMMA>, <&kp MINUS>; // [sft ,] ─› [_]
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  mdot: mod_morph_dot {
    compatible = "zmk,behavior-mod-morph";
    label = "MOD_MORPH_DOT";
    #binding-cells = <0>;
    bindings = <&kp DOT>, <&kp MINUS>; // [sft .] ─› [_]
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  mbspc: mod_morph_bspc {
    compatible = "zmk,behavior-mod-morph";
    label = "MOD_MORPH_BSPC";
    #binding-cells = <0>;
    bindings = <&kp BSPC>, <&kp N1>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
};

combos {
  compatible = "zmk,combos";
  combo_h_comma {
    timeout-ms = <COMBO_TIMEOUT>;
    key-positions = <CB2 CB3>; // [ k h , . ^ ]
    bindings = <&kp QUOT>; //         └─┴──› '
    layers = <0>;
  };
  combo_comma_dot {
    timeout-ms = <COMBO_TIMEOUT>;
    key-positions = <CB3 CB4>; // [ k h , . ^ ]
    bindings = <&kp LA(TAB)>; //        └─┴──› alt-tab
    layers = <0>;
  };
  combo_h_dot {
    timeout-ms = <COMBO_TIMEOUT>;
    key-positions = <CB2 CB4>; // [ k h , . ^ ]
    bindings = <&kp LC(BSPC)>; //     └───┴──› ctrl-backspace
    layers = <0>;
  };
  combo_h_comma_dot {
    timeout-ms = <COMBO_TIMEOUT>;
    key-positions = <CB2 CB3 CB4>; // [ k h , . ^ ]
    bindings = <&kp LC(BSPC)>; //         └─┴─┴──› ctrl-backspace
    layers = <0>;
  };
  combo_f_p_sym {
    timeout-ms = <COMBO_TIMEOUT>;
    key-positions = <CBL3 CBL4>; // [ q w f p b ]
    bindings = <&tog FVBASE>; //          └─┴──› frogv
    layers = <SYM>;
  };
  combo_k_h {
    timeout-ms = <COMBO_TIMEOUT>;
    key-positions = <CB1 CB2>; // [ k h , . ^ ]
    bindings = <&kp ESC>; //        └─┴──› esc
    layers = <0>;
  };
};

keymap {
  compatible = "zmk,keymap";

  // ┌─────────────────────┐┌─────────────────────┐
  // │ q^  w   f   p   b   ││ j   l   u   y   bks │ Colemak DH
  // │ a   r   s   t   g   ││ m   n   e   i   o   │
  // │ z   x   c   d   v   ││ k   h   ,_  ._  ent^│ (ent-ctrl)
  // └─────────────────────┤├─────────────────────┘
  //         │ gui SYM ↑   ││ ──  NAV alt │
  //         └─────────────┘└─────────────┘
  default_layer { // {{{
    bindings = < LAYOUT36(
      _CTLQ, _ W, _ F,    _ P,     _ B,    /**/  _ J,     _ L,     _ U,     _ Y,   _ BSPC,
      _ A,   _ R, _ S,    _ T,     _ G,    /**/  _ M,     _ N,     _ E,     _ I,   _ O,
      _ Z,   _ X, _ C,    _ D,     _ V,    /**/  _ K,     _ H,     &mcomma, &mdot, _CENT,
      /**/   /**/ _ LGUI, &mo SYM, _ LSFT, /**/  _ SPACE, &mo NAV, _ LALT
    ) >;
  }; // }}}

  // ┌─────────────────────┐┌─────────────────────┐
  // │ ctl gui ⇤   ⇥   alt ││ ,   hom ▲   end del │ Navigation
  // │ 1   2   3   4   5   ││ .   ◀   ▼   ▶   ent │
  // │ 6   7   8   9   0   ││     p↑  p↓  esc ctl │
  // └───────┐─────────────││─────────────┌───────┘
  //         │ ·   SYM ·   ││ spc ▓▓  ralt│
  //         └─────────────┘└─────────────┘
  nav_layer { // {{{
    bindings = < LAYOUT36(
      _ RCTRL, _ RGUI, _ SFTAB,  _ TAB,  _ LALT, /**/ _ COMMA, _   HOME, _ UP,   _ END,   _ DEL,
      _ N1,    _ N2,   _ N3,     _ N4,   _ N5,   /**/ _ DOT,   _   LEFT, _ DOWN, _ RIGHT, _ RET,
      _ N6,    _ N7,   _ N8,     _ N9,   _ N0,   /**/ _ ESC,   _   PGUP, _ PGDN, _ ESC,   _ LCTL,
      /**/     /**/    &trans,   &trans, &trans, /**/ _ SPACE, &mo FUN,  _ RALT
    ) >;
  }; // }}}

  // ┌─────────────────────┐┌─────────────────────┐
  // │ '   "   ^   ?   `   ││ [   <   =   >   ]   │ Symbols
  // │ !   @   #   $   %   ││ {   (   :   )   }   │
  // │ \   ~   |   ;   &   ││ /   *   -   +   _   │
  // └───────┐─────────────││─────────────┌───────┘
  //         │ ·   ▓▓  ADJ ││ ·   FUN ralt│
  //         └─────────────┘└─────────────┘
  sym_layer { // {{{
    bindings = < LAYOUT36(
      _ QUOT,  _ DQT,   _ CARET, _ QMARK, _ GRAVE, /**/ _ LBKT,  _ LT,    _ EQUAL, _ GT,   _ RBKT,
      _ EXCL,  _ AT,    _ HASH,  _DLLR,   _ PRCNT, /**/ _ LBRC,  _ LPAR,  _ COLON, _ RPAR, _ RBRC,
      _ BSLH,  _ TILDE, _ PIPE,  _ SEMI,  _ AMPS,  /**/ _ SLASH, _ STAR,  _ MINUS, _ PLUS, _ UNDER,
      /**/     /**/     &trans,  &mo FUN, &mo ADJ, /**/ _ SPACE, &mo FUN, _ RALT
    ) >;
  }; // }}}

  // ┌─────────────────────┐┌─────────────────────┐
  // │     ,   .   :   #   ││ ,   A   B   C   bks │ Hex input
  // │ 1   2   3   4   5   ││ .   D   E   F   ent │
  // │ 6   7   8   9   0   ││ /   *   -   +       │
  // └───────┐─────────────││─────────────┌───────┘
  //         │ ·   ▓▓  ──  ││ ──  ·   ·   │
  //         └─────────────┘└─────────────┘
  hex_layer { // {{{
    bindings = < LAYOUT36(
      __,   _ COMMA, _ DOT, _ COLON, _ HASH, /**/ _ COMMA, _ A,    _ B,     _ C,    _ BSPC,
      _ N1, _ N2,    _ N3,  _ N4,    _ N5,   /**/ _ DOT,   _ D,    _ E,     _ F,    _ RET,
      _ N6, _ N7,    _ N8,  _ N9,    _ N0,   /**/ _ SLASH, _ STAR, _ MINUS, _ PLUS, _ COLN,

      /**/ _, _, _ SPC, /**/ _ SPC, __, __
    ) >;
  }; // }}}

  // ┌─────────────────────┐┌─────────────────────┐
  // │ f11 f12 psc ply nxt ││ .   .   .   .   b⁺  │ Function
  // │ f1  f2  f3  f4  f5  ││ .   .   .   .   b⁻  │
  // │ f6  f7  f8  f9  f10 ││ .   v-  v+  .   .   │
  // └───────┐─────────────││─────────────┌───────┘
  //         │ ·   ·   ──  ││ ──  ▓▓  ·   │
  //         └─────────────┘└─────────────┘
  fun_layer { // Function {{{
    bindings = < LAYOUT36(
      _ F11,   _ F12,   _ PSCRN, _ C_PLAY, _ C_NEXT, /**/ _ C_VOL_UP, __,         __,         __,       _ C_BRI_UP,
      _ F1,    _ F2,    _ F3,    _ F4,     _ F5,     /**/ _ C_VOL_DN, __,         __,         __,       _ C_BRI_DN,
      _ F6,    _ F7,    _ F8,    _ F9,     _ F10,    /**/ _ C_PLAY,   _ C_VOL_DN, _ C_VOL_UP, _ C_NEXT, __,

      /**/ &trans, &trans, &trans, /**/ &trans, &trans, &trans
    ) >;
  }; // }}}

  // ┌─────────────────────┐┌─────────────────────┐
  // │lock .   .   .   clr ││ .   .   .   .   .   │
  // │game .   .   bt  usb ││ .   .   .   .   .   │
  // │BOOT b3  b2  b1  b0  ││ b0  b1  b2  b3  BOOT│
  // └───────┐─────────────││─────────────┌───────┘
  //         │ ·   FRV ▓▓  ││ tog bt  usb │ Adjust
  //         └─────────────┘└─────────────┘
  adj_layer { // {{{
    bindings = < LAYOUT36(
      &tog LOCK,   __,    __,    __,     &bt BT_CLR, /**/ __,    __,    __,    __,    __,
      &tog GAME,   __,    __,    BT_BLE, BT_USB,     /**/ __,    __,    __,    __,    __,
      &bootloader, BT(3), BT(2), BT(1),  BT(0),      /**/ BT(0), BT(1), BT(2), BT(3), &bootloader,

      /**/         /**/   &trans, &tog FVBASE, __,      BT_TOG,   BT_BLE,   BT_USB
    ) >;
  }; // }}}

  fvbase_layer { // FrogV base {{{
    // Base:                   Flip:                   Nav:
    // ┌─────────────────────┐ ┌─────────────────────┐ ┌─────────────────────┐
    // │ s*  c   n   i   g   │ │ q   w   m   j   k   │ │ ░░  p↑  ▲   p↓  bks │
    // │ ●   t   h   e   o   │ │ ░░  p   l   x   ↑   │ │ .   ◀   ▼   ▶   ent │
    // │ f*  d   r   a   u   │ │ .   b   v   y   z   │ │ .   hom end ⇥   esc │
    // └───────┐ ctl num spc │ └───────┐ ctl gui ↑   │ └───────┐ ctl gui ↑   │
    //         └─────────────┘         └─────────────┘         └─────────────┘
    bindings = < LAYOUT36(
      &lt FVNAVI S, &kp C,     &kp N,     &kp I,      &kp G,        &none,       &none,     &none,     &none,     &none,
      &sl FVFLIP,   &kp T,     &kp H,     &kp E,      &kp O,        &none,       &none,     &none,     &none,     &none,
      &lt FVSYMB F, &kp D,     &kp R,     &kp A,      &kp U,        &none,       &none,     &none,     &none,     &none,
                               &kp LCTL,  &mo FVNUMP, &kp SPACE,    &tog FVBASE, &none,     &tog FVBASE
    ) >;
  };

  fvflip_layer { // FrogV flip
    bindings = < LAYOUT36(
      &kp Q,      &kp W,     &kp M,     &kp J,     &kp K,       &trans,    &trans,    &trans,    &trans,    &trans,
      &trans,     &kp P,     &kp L,     &kp X,     &sk LSFT,    &trans,    &trans,    &trans,    &trans,    &trans,
      &kp Q,      &kp B,     &kp V,     &kp Y,     &kp Z,       &trans,    &trans,    &trans,    &trans,    &trans,
      /**/                 &kp LCTL,  &kp LGUI,  &kp LSFT,    &trans,    &trans,    &trans
    ) >;
  };

  fvnavi_layer { // FrogV navigation
    bindings = < LAYOUT36(
      &trans,     &kp PGUP,  &kp UP,    &kp PGDN,   &kp BSPC,     &trans,    &trans,    &trans,    &trans,    &trans,
      &none,      &kp LEFT,  &kp DOWN,  &kp RIGHT,  &kp RET,      &trans,    &trans,    &trans,    &trans,    &trans,
      &none,      &kp HOME,  &kp END,   &kp TAB,    &kp ESC,      &trans,    &trans,    &trans,    &trans,    &trans,
      /**/                 &kp LCTL,  &kp LGUI,   &kp LSFT,     &trans,    &trans,    &trans
    ) >;
  };

  fvnump_layer { // FrogV number pad
    // Num:                    Sym:
    // ┌─────────────────────┐ ┌─────────────────────┐
    // │         gui ↑   ext │ │     !   [   ]   \   │
    // │ 1   2   3   4   5   │ │     '   =   -   /   │
    // │ 6   7   8   9   0   │ │     ;   ,   .   '   │
    // └───────┐ alt .   ctl │ └───────┐         ↑   │
    //         └─────────────┘         └─────────────┘
    bindings = < LAYOUT36(
      &none,       &none,     &kp LGUI,  &kp LSFT,   &tog FVBASE,  &trans,    &trans,    &trans,    &trans,    &trans,
      &kp N1,      &kp N2,    &kp N3,    &kp N4,     &kp N5,       &trans,    &trans,    &trans,    &trans,    &trans,
      &kp N6,      &kp N7,    &kp N8,    &kp N9,     &kp N0,       &trans,    &trans,    &trans,    &trans,    &trans,
      /**/                  &kp LALT,  &trans,     &kp LCTL,     &trans,    &trans,    &trans
    ) >;
  };

  fvsymb_layer { // FrogV symbol
    bindings = < LAYOUT36(
      &none,     &kp EXCL,  &kp LBKT,  &kp RBKT,   &kp BSLH,     &trans,    &trans,    &trans,    &trans,    &trans,
      &none,     &kp GRAVE, &kp EQUAL, &kp MINUS,  &kp LGUI,     &trans,    &trans,    &trans,    &trans,    &trans,
      &none,     &kp SEMI,  &kp COMMA, &kp DOT,    &kp QUOT,     &trans,    &trans,    &trans,    &trans,    &trans,

                          &trans,    &trans,     &kp LSFT,     &trans,    &trans,    &trans
    ) >;
  }; // }}}

  // ┌─────────────────────┐ ┌─────────────────────┐
  // │ tab q   w   e   r   │ │ y   u   i   o   p   │ Game
  // │ sft a   s   d   f   │ │ t   j   k   l   ent │
  // │ ctl 1   2   3   4   │ │ n   m           esc │
  // └───────┐ ▲Y  ▲X  spc │ │ spc XX exit ┌───────┘
  // ┌─────────────────────┐ ┌─────────────────────┐
  // │ f1  f2  f3  f4  f5  │ │         ↑       bs  │ X
  // │ 5   6   7   g   h   │ │     ←   ↓   →   ent │
  // │ z   x   c   v   b   │ │                 esc │
  // └───────┐     ━━  alt │ │        exit ┌───────┘
  // ┌─────────────────────┐ ┌─────────────────────┐
  // │ y   u   i   o   p   │ │         ↑       bs  │ Y
  // │ t   j   k   l   ent │ │     ←   ↓   →   ent │
  // │ n   m   c   v   esc │ │                 esc │
  // └───────┐ ━━          │ │        exit ┌───────┘
  //         └─────────────┘ └─────────────┘

  game_layer {
    bindings = < LAYOUT36(
      _ TAB,  _ Q,  _ W,  _ E,  _ R,  /**/ _ Y, _ U, _ I, _ O, _ P,
      _ LSFT, _ A,  _ S,  _ D,  _ F,  /**/ _ T, _ J, _ K, _ L, _ RET,
      _ LCTL, _ N1, _ N2, _ N3, _ N4, /**/ _ N, _ M, __,  __,  _ ESC,
      &mo GAMEY, &mo GAMEX, _ SPC,  /**/ _ SPC,   &mo GAMEX, &tog GAME
    ) >;
  };

  game_x_layer {
    bindings = < LAYOUT36(
      _ F1,    _ F2,    _ F3,    _ F4,    _ F5,       &none,     &none,     _ UP,    &none,     _ BSPC,
      _ N5,    _ N6,    _ N7,    _ G,     _ H,        &none,     _ LEFT,  _ DOWN,  _ RIGHT, _ RET,
      _ Z,     _ X,     _ C,     _ V,     _ B,        &none,     &none,     &none,     &none,     _ ESC,
      /**/                &none,     &none,     &kp LALT,     &none,     &none,     &tog GAME
    ) >;
  };

  game_y_layer {
    bindings = < LAYOUT36(
      _ Y, _ U, _ I,     _ O,   _ P,   &none,     &none,     _ UP,    &none,     _ BSPC,
      _ T, _ J, _ K,     _ L,   _ RET, &none,     _ LEFT,  _ DOWN,  _ RIGHT, _ RET,
      _ N, _ M, _ COMMA, _ DOT, _ ESC, &none,     &none,     &none,     &none,     _ ESC,
                    &none,     &none,   &none,   &none,     &none,     &tog GAME
    ) >;
  };

  lock_layer { // Lock {{{
    bindings = < LAYOUT36(
      __,       __, __, __, __, __, __, __, __, __,
      __,       __, __, __, __, __, __, __, __, __,
      &mo ULOC, __, __, __, __, __, __, __, __, __,
      /**/ __, __, &mo ULOC, /**/ __, __, __
    ) >;
  }; // }}}

  unlock_layer { // Unlock {{{
    bindings = < LAYOUT36(
      __,       __, __, __, __, __, __, __, __, __,
      __,       __, __, __, __, __, __, __, __, __,
      &tog LOCK, __, __, __, __, __, __, __, __, __,
      /**/ __, __, &tog LOCK, /**/ __, __, __
    ) >;
  }; // }}}
};

// vim:ft=c:fdm=indent
// https://zmk.dev/docs/codes/layer
